# Hidariude nginx設定ファイル
# 配置場所: /etc/nginx/conf.d/hidariude.conf

# ログインリクエストのレート制限用ゾーン定義
# 1分間に10リクエストまで許可（バーストは2まで）
# 注: POSTリクエストが主な対象ですが、エンドポイント全体に制限を適用します
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=10r/m;

# 通常リクエストのレート制限用ゾーン（オプション）
limit_req_zone $binary_remote_addr zone=general_limit:10m rate=100r/s;

server {
    listen 80;
    server_name ourdesk.n-learning.jp;
    
    # Let's Encryptの証明書取得用（certbot用）
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # HTTPからHTTPSへのリダイレクト
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    http2 on;
    server_name ourdesk.n-learning.jp;
    
    # SSL証明書のパス（Let's Encrypt）
    ssl_certificate /etc/letsencrypt/live/ourdesk.n-learning.jp/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ourdesk.n-learning.jp/privkey.pem;
    
    # SSL設定（セキュリティ強化）
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # セキュリティヘッダー
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # ログ設定
    access_log /var/log/nginx/hidariude_access.log;
    error_log /var/log/nginx/hidariude_error.log;
    
    # クライアントボディサイズ制限
    client_max_body_size 10M;
    
    # プロキシ設定
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    
    # タイムアウト設定
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # ログインエンドポイントへのレート制限適用
    # 注: POSTリクエストが主な対象ですが、エンドポイント全体に制限を適用します
    # nginxの制約により、ifブロック内でlimit_reqは使用できないため、
    # ログインエンドポイント全体（GET/POST両方）にレート制限を適用します
    location ~ ^/(admin|secretary|customer)/login$ {
        # レート制限を適用（1分間に10リクエスト、バースト2）
        limit_req zone=login_limit burst=2 nodelay;
        limit_req_status 429;
        
        # ログイン試行ログ（POSTリクエストの試行を記録）
        # POSTリクエストのみを記録するため、条件付きログを使用
        access_log /var/log/nginx/hidariude_login_attempts.log combined;
        
        # Tomcatへのプロキシ
        proxy_pass http://localhost:8080;
        
        # エラーページ（429 Too Many Requests）
        error_page 429 @ratelimit;
    }
    
    # 429エラー時のカスタムレスポンス
    location @ratelimit {
        default_type application/json;
        return 429 '{"error":"Too many login attempts. Please try again later."}';
    }
    
    # その他のすべてのリクエスト
    location / {
        # 一般的なレート制限（オプション、必要に応じて有効化）
        # limit_req zone=general_limit burst=20 nodelay;
        
        # Tomcatへのプロキシ
        proxy_pass http://localhost:8080;
    }
}

